AWSTemplateFormatVersion: '2010-09-09'
Description: Funtion to move the filesout file to datapump efs
Transform: AWS::Serverless-2016-10-31

Parameters:
  StageName:
    Type: String
    Default: dev
  ProductLine:
    Type: String
    Default: data-channels
  vpcStackName:
    Description: VPC and file system stack name
    Type: String
    Default: vpc-7aced912
  SecurityGroupIds:
    Type: CommaDelimitedList
    Default: sg-43dc9c20
  SubnetIDs:
    Type: CommaDelimitedList
    Description: The list of SubnetIDs in your Virtual Private Cloud (VPC)
    Default: subnet-0c2e9a77,subnet-170d605b,subnet-a51c20cd
  EFSpath:
    Default: "/mnt/files"
    Description: File system mount path
    Type: String
  AccessPointARN:
    Type: String
    Description: Access point ARN
    Default: arn:aws:elasticfilesystem:ap-south-1:026420118215:access-point/fsap-05023fe8a92ec615d

Resources:
  sffilemovementfunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: "./"
      FunctionName: st-file-move-BuiltInProcessor
      Handler: index.handler
      # change timeout, memory, and node version to meet your needs.  node 12 or higher is required by data channels
      Timeout: 900
      MemorySize: 3008
      Runtime: nodejs12.x
      VpcConfig:
        SecurityGroupIds: !Ref SecurityGroupIds
        SubnetIds: !Ref SubnetIDs
      FileSystemConfigs:
      - Arn: !Ref AccessPointARN
        LocalMountPath: !Ref EFSpath    
      Environment:
          Variables:
            DESTINATION_FOLDER: !Ref EFSpath              
      Policies:
      # this statement allows your lambda the ability to trigger the built-in data channel log grabber lambda which will grab
      # cloudwatch logs and put them in s3 for further analysis
      - AmazonS3FullAccess    
      - Statement:
        - Sid: AWSLambdaVPCAccessExecutionRole
          Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - ec2:CreateNetworkInterface
            - ec2:DescribeNetworkInterfaces
            - ec2:AttachNetworkInterface
          Resource: "*"
        - Sid: AWSElasticFileSystemClientFullAccess
          Effect: Allow
          Action:
             - elasticfilesystem:ClientWrite
             - elasticfilesystem:DescribeMountTargets
          Resource: "*"    
  ImageBucketPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref sffilemovementfunction
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !Sub arn:aws:s3:::sf-file-move-pl

Outputs:
  MyFunctionArn:
    Description: sffilemovementfunction Arn
    Value: !GetAtt sffilemovementfunction.Arn      